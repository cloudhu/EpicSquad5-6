// CloudHu:604746493@qq.com All Rights Reserved

#pragma once


#include "NativeGameplayTags.h"

namespace FrontendGameplayTags
{
	//Layers
	EPICSQUAD_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(UI_Layer_GameMenu);
	EPICSQUAD_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(UI_Layer_GameHud);

	//Widgets
	//Frontend widgets
	EPICSQUAD_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(UI_Widget_PressAnyKeyScreen);
	EPICSQUAD_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(UI_Widget_MainMenuScreen);
	EPICSQUAD_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(UI_Widget_OptionsScreen);

	EPICSQUAD_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(UI_Widget_KeyRemapScreen);
	EPICSQUAD_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(UI_Widget_SaveFileAction);
	EPICSQUAD_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(UI_Widget_ReplayScreen);
	EPICSQUAD_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(UI_Widget_CreditsScreen);

	//Frontend Options Image
	EPICSQUAD_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(UI_Image_Logo);
	
}

namespace LyraGameplayTags
{
	EPICSQUAD_API	FGameplayTag FindTagByString(const FString& TagString, bool bMatchPartialString = false);

	// Declare all of the custom native tags that Lyra will use
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_IsDead);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_Cooldown);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_Cost);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_TagsBlocked);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_TagsMissing);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_Networking);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_ActivateFail_ActivationGroup);

	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ability_Behavior_SurvivesDeath);

	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Move);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look_Mouse);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look_Stick);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Crouch);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_AutoRun);

	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InitState_Spawned);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InitState_DataAvailable);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InitState_DataInitialized);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(InitState_GameplayReady);

	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayEvent_Death);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayEvent_Reset);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameplayEvent_RequestReset);

	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(SetByCaller_Damage);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(SetByCaller_Heal);

	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Cheat_GodMode);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Cheat_UnlimitedHealth);

	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Crouching);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_AutoRunning);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Death);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Death_Dying);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Status_Death_Dead);

	// These are mappings from MovementMode enums to GameplayTags associated with those enums (below)
	EPICSQUAD_API	extern const TMap<uint8, FGameplayTag> MovementModeTagMap;
	EPICSQUAD_API	extern const TMap<uint8, FGameplayTag> CustomMovementModeTagMap;

	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Movement_Mode_Walking);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Movement_Mode_NavWalking);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Movement_Mode_Falling);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Movement_Mode_Swimming);
	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Movement_Mode_Flying);

	EPICSQUAD_API	UE_DECLARE_GAMEPLAY_TAG_EXTERN(Movement_Mode_Custom);
};